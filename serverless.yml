# ********************************************
# Serverless TypeScript Starter
# ********************************************

service: my-service-name

# Plugins required for this setup
# ===================================================================
plugins:
  - serverless-plugin-typescript
#  - serverless-webpack
  - serverless-offline
  - serverless-plugin-stack-outputs

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

# Custom variables
# ===================================================================
custom:
  stage: ${opt:stage, self:provider.stage}
  secrets: ${file(secrets.yml):${self:custom.stage}}
  bucket: my-bucket

# The `provider` defines where your service will be deployed
# ===================================================================
provider:
  name: aws
  runtime: nodejs6.10
  region: eu-central-1
  ## If you want to change to a different AWS profile
  ## from ~/.aws/credentials, you can do so here
  # profile: default
  ## you can overwrite defaults here
  # stage: dev
  # timeout: 30
  # memorySize: 128
  # versionFunctions: true
  ## You can define service wide environment variables here
  # environment:
  #   BUCKET: "${self:custom.bucket}"
  ## You can add statements to the Lambda function's IAM Role here
  # iamRoleStatements:
  #  - Effect: Allow
  #    Action:
  #      - s3:*
  #    Resource: "arn:aws:s3:::${self:custom.bucket}/*"
  #  - Effect: "Allow"
  #    Action:
  #      - "s3:ListBucket"
  #    Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
  #  - Effect: "Allow"
  #    Action:
  #      - "s3:PutObject"
  #    Resource:
  #      Fn::Join:
  #        - ""
  #        - - "arn:aws:s3:::"
  #          - "Ref" : "ServerlessDeploymentBucket"

# Include or exclude extra files from/to package
# ===================================================================
package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

# The `Functions` you want to deploy
# ===================================================================
functions:
  # hello
  # -------------------------------------------------------
  hello:
    handler: src/handler.default
    events:
      - http:
          path: hello
          method: get
      # Ping every 5 minutes to avoid cold starts
      - schedule:
          rate: rate(5 minutes)
          enabled: true

#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
#    events:
#      - http:
#          path: users/create
#          method: get
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000

#    Define function environment variables here
#    environment:
#      variable2: value2

# The `Resources` your `Functions` use.  Raw AWS CloudFormation goes in here.
# ===========================================================================
# resources:
#  Resources:
#    MyResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: "${self:custom.bucket}"
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"

